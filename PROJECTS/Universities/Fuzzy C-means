import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from fcmeans import FCM
from sklearn.preprocessing import StandardScaler
from sklearn.decomposition import PCA

# ✅ Step 1: Load your dataset
df = pd.read_csv("C:/Users/pavan/OneDrive/Desktop/Projects/Universities.csv")
df.fillna(df.median(numeric_only=True), inplace=True)

# ✅ Step 2: Numeric features & scaling
df_numeric = df.select_dtypes(include=['float64', 'int64'])
scaler = StandardScaler()
scaled_data = scaler.fit_transform(df_numeric)

# ✅ Step 3: Fuzzy C-Means Clustering
fcm = FCM(n_clusters=4, random_state=42)  # You can try 3, 4, or 5 clusters
fcm.fit(scaled_data)

# Cluster labels and membership probabilities
df['FuzzyCluster'] = fcm.predict(scaled_data)
membership_matrix = fcm.u  # Shape: (n_samples, n_clusters)

# ✅ Step 4: Graduation rate per cluster
print("\n📊 Graduation Rate by Fuzzy Cluster (Hard Labels):")
print(df.groupby('FuzzyCluster')['Graduation rate'].mean())

print("\n🔍 Sample of Membership Probabilities (first 5 rows):")
print(pd.DataFrame(membership_matrix[:5], columns=[f"Cluster {i}" for i in range(membership_matrix.shape[1])]))


# ✅ Step 5: PCA for visualization
pca = PCA(n_components=2)
pca_result = pca.fit_transform(scaled_data)
df['PCA1'] = pca_result[:, 0]
df['PCA2'] = pca_result[:, 1]

# ✅ Step 6: Plot Fuzzy Clusters (Hard Assignments)
plt.figure(figsize=(10, 6))
sns.scatterplot(data=df, x='PCA1', y='PCA2', hue='FuzzyCluster', palette='tab10', s=50)
plt.title("🌀 Fuzzy C-Means Clustering (Hard Assignments)")
plt.xlabel("PCA1")
plt.ylabel("PCA2")
plt.grid(True)
plt.legend(title="Fuzzy Cluster")
plt.tight_layout()
plt.show()
