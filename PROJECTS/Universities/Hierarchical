import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.preprocessing import StandardScaler
from scipy.cluster.hierarchy import linkage, dendrogram, fcluster
from sklearn.decomposition import PCA

# Load and preprocess data
df = pd.read_csv("C:/Users/pavan/OneDrive/Desktop/Projects/Universities.csv")
df.fillna(df.median(numeric_only=True), inplace=True)
df_numeric = df.select_dtypes(include=['float64', 'int64'])

# Scale
scaler = StandardScaler()
scaled_data = scaler.fit_transform(df_numeric)

# Linkage matrix
linked = linkage(scaled_data, method='ward')

# üìç Define number of clusters
k = 5

# Plot dendrogram with cut line
plt.figure(figsize=(12, 6))
dendrogram(
    linked,
    truncate_mode='lastp',
    p=30,
    show_leaf_counts=True,
    leaf_rotation=90.,
    leaf_font_size=10.,
    show_contracted=True,
    color_threshold=linked[-(k-1), 2]  # auto-color clusters
)
plt.axhline(y=linked[-(k-1), 2], c='black', lw=2, linestyle='--', label=f'Cut for {k} clusters')
plt.title(f"Hierarchical Clustering Dendrogram with Cluster Cut (k={k})")
plt.xlabel("Cluster Members")
plt.ylabel("Distance")
plt.legend()
plt.tight_layout()
plt.show()

# Assign cluster labels
df['HierCluster'] = fcluster(linked, k, criterion='maxclust')

# Optional: print summary
print("\nüßÆ Cluster Counts:")
print(df['HierCluster'].value_counts())
print("\nüéì Graduation Rate per Cluster:")
print(df.groupby('HierCluster')['Graduation rate'].mean())
