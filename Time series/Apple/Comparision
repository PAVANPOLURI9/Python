import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
from statsmodels.tsa.arima.model import ARIMA
from statsmodels.tsa.statespace.sarimax import SARIMAX
from statsmodels.tsa.arima.model import ARIMA as ARMA_MODEL
from sklearn.metrics import mean_squared_error

# Load Apple stock data
df = pd.read_csv("C:/AI/Python/Time series/Apple/Apple_stock_2010_2024.csv")
df['Date'] = pd.to_datetime(df['Date'])
df.set_index('Date', inplace=True)
df['Price'] = pd.to_numeric(df['Price'], errors='coerce')
df.dropna(subset=['Price'], inplace=True)

# ---------------------------
# ARMA(1,1) â†’ only valid on stationary data
# So we'll difference manually and forecast on that
diff_data = df['Price'].diff().dropna()
arma_model = ARIMA(diff_data, order=(1, 0, 1))
arma_result = arma_model.fit()
arma_forecast_diff = arma_result.forecast(steps=30)
# Convert differenced forecast back to original scale
arma_forecast = df['Price'].iloc[-1] + np.cumsum(arma_forecast_diff)

# ---------------------------
# ARIMA(1,1,1)
arima_model = ARIMA(df['Price'], order=(1, 1, 1))
arima_result = arima_model.fit()
arima_forecast = arima_result.forecast(steps=30)

# ---------------------------
# SARIMA(1,1,1)(1,1,1,5)
sarima_model = SARIMAX(df['Price'], order=(1, 1, 1), seasonal_order=(1, 1, 1, 5))
sarima_result = sarima_model.fit(disp=False)
sarima_forecast = sarima_result.forecast(steps=30)

# ---------------------------
# Forecast index & actual for RMSE comparison
forecast_index = pd.date_range(start=df.index[-1] + pd.Timedelta(days=1), periods=30, freq='D')
actual = df['Price'].iloc[-30:]
actual.index = forecast_index

# Calculate RMSE for each model
arma_rmse = np.sqrt(mean_squared_error(actual, arma_forecast))
arima_rmse = np.sqrt(mean_squared_error(actual, arima_forecast))
sarima_rmse = np.sqrt(mean_squared_error(actual, sarima_forecast))

print("\nðŸ“Š RMSE Comparison:")
print(f"ARMA(1,1):     {arma_rmse:.2f}")
print(f"ARIMA(1,1,1):  {arima_rmse:.2f}")
print(f"SARIMA(1,1,1)(1,1,1,5): {sarima_rmse:.2f}")

# ---------------------------
# Plot
recent_data = df['Price'].iloc[-180:]

plt.figure(figsize=(14, 6))
plt.plot(recent_data, label="Last 180 Days - Historical", color='blue')
plt.plot(forecast_index, arma_forecast, label="ARMA Forecast", color='purple')
plt.plot(forecast_index, arima_forecast, label="ARIMA Forecast", color='red')
plt.plot(forecast_index, sarima_forecast, label="SARIMA Forecast", color='green')
plt.title("Apple Stock Forecast: ARMA vs ARIMA vs SARIMA")
plt.xlabel("Date")
plt.ylabel("Price (USD)")
plt.legend()
plt.grid(True)
plt.tight_layout()
plt.show()
